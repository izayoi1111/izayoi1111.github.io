<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux服务器编程</title>
    <link href="/2025/02/25/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E7%A8%8B/"/>
    <url>/2025/02/25/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="1-TCP-IP协议族"><a href="#1-TCP-IP协议族" class="headerlink" title="1. TCP&#x2F;IP协议族"></a>1. TCP&#x2F;IP协议族</h2><p>TCP&#x2F;IP协议族是四层协议系统，分为数据链路层、网络层、传输层、应用层。</p><ol><li><p>数据链路层：使用ARP、RARP协议，向上层隐瞒不同物理网络不同的电气特性，实现IP地址与物理地址之间的相互转换。</p></li><li><p>网络层：使用ICMP、IP协议，向上层隐瞒网络拓扑结构，传输层认为主机之间是相互直连的，ICMP协议用于检测网络连接，使用同处于网络层的IP协议提供的功能。</p></li><li><p>传输层：使用TCP、UDP、SCTP协议，为应用层提供一条端到端的逻辑通信链路。TCP协议提供可靠的、面向连接的、基于流的服务，使用超时重传、数据确认等方式保证数据包的正确发送。</p><blockquote><p>TCP提供连接的状态、读写缓冲区、定时器等数据结构。</p></blockquote></li></ol><p>​UDP提供无连接、不可靠、基于数据报的服务，不保证数据的正确传送。</p><p>​SCTP协议是一种较新的传输层协议，在此处不进行讨论。</p><ol start="4"><li>应用层：使用telnet、OSPF、DNS等协议，在用户空间中实现，负责文件传输、名称查询、网络管理等。应用层协议既可以跳过传输层直接使用网络层提供的服务，又可以适配TCP协议和UDP协议。</li></ol><p>封装是指每层协议在上层数据的基础上加入自己的头部信息以实现该层的功能。</p><ol><li><p>TCP报文段包括TCP头部信息、TCP内核发送缓冲区。</p></li><li><p>UDP数据包与TCP报文段相似，不同的是UDP报文段不保存应用层数据副本，即，当一个UDP数据报成功发送时，UDP内核缓冲区中的该数据报就被丢弃了，如果打算重新发送该数据报需要重新从用户空间将该数据报拷贝到UDP内核发送缓冲区中。</p></li><li><p>IP数据报包括头部信息与数据部分，数据部分就是一个TCP报文段或其他传输层数据单位。</p></li><li><p>帧的类型取决于传输媒介，如以太网帧、令牌环帧等。帧的最大传输单元（MTU)为1500字节，其中数据部分范围为46-1500字节。</p><blockquote><p>数据部分最小值详见计算机网络部分。</p></blockquote></li></ol><p>分用：帧沿着协议栈自底向上传输的过程。</p><p>socket：使应用程序能够访问下三层协议</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>深入TinyWebServer</title>
    <link href="/2025/02/25/%E6%B7%B1%E5%85%A5TinyWebServer/"/>
    <url>/2025/02/25/%E6%B7%B1%E5%85%A5TinyWebServer/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>TinyWebServer的复现</title>
    <link href="/2025/02/25/TinyWebServerNotes/"/>
    <url>/2025/02/25/TinyWebServerNotes/</url>
    
    <content type="html"><![CDATA[<p>本文章基于<a href="https://blog.csdn.net/weixin_46653651/article/details/133420059">（一）TinyWebServer的环境配置与运行-CSDN博客</a>与<a href="https://blog.csdn.net/m0_47710003/article/details/144442735">TinyWebserver【一】配置与运行-CSDN博客</a>实现，仅用于个人总结与补充。</p><p>本文章更倾向于是对hexo博客功能的探索与复现过程的简单记录。</p><ol><li><p>安装VMware与Ubuntu系统，创建虚拟机用于实验。</p></li><li><p>安装mysql等Ubuntu需要的程序。</p></li><li><p>克隆代码并编译运行。</p><blockquote><p>main.cpp中只需要修改databasename，因为克隆得到的文件夹本身权限即为root，若修改登录名与密码，则需通过chmod命令更改TinyWebServer文件夹的属性，使其可以被读写。</p></blockquote></li><li><p>压力测试</p><p><img src="D:\blog\myblog\source_posts\TinyWebServerNotes\image-20250225174127054.png" alt="压力测试"></p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/25/hello-world/"/>
    <url>/2025/02/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
